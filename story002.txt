it is narrator @(0,0,0,0,0,0,1,1,1)
narrator says "hello youong frinds" #36
narrator says "welcome to this animmation on far flung cltures of India" #72
narrator says "My name is Ahmad Balti and today, I will tell you about my Balti ( pronounced बलटी)  people" #72
it is indiamap @(0,0,0,0,0,0,1,1,1) #12
it is narrator @(0,0,0,0,0,0,0,0,0)
narrator says "first, some basics" #36
narrator says "Geography" #12
narrator says "there i am... there on the top of mountains of mighty himalaya, some 3km above sea level" #96
narrator says "and now a brief history" #36
it is indiamap @(0,1,0,0,0,0,0,0,0)
it is SEAMap @(0,0,0,0,0,0,1,1,1)
camera moves @(0,0,9,0,0,0,1,1,1)-@(0,9,0,0,0,0,1,1,1)nnnngolan ancestry." #120
narrator says "Around 600 years back, a persian by name of Mir Sayyid Ali bought Shia branch of Islam to the region." #120
narrator says "Troughout history, this area have been ruled by Rajas of Hunza, Dogra, and part of the princely state of Jammu and Kashmir rulers." #120
narrator says "In the year 1947, following the Pakistani army invasion, Pakistani army captured our land, which was partially freed in 1971 war." #120
it is narrator @(0,0,0,0,0,0,1,1,1)
it is SEAMap @(0,0,0,0,0,0,0,0,0)
narrator says "Ok, so enough boring study time... let us move to the cool things you may like here :) " #120
it is narrator @(0,0,0,0,0,0,0,0,0)
it is indianmap @(0,0,0,0,0,0,0,0,0)
it is outsideview "Primordial thing in here: beauty, lots of it" #48 @(0,0,0,0,0,0,1,1,1)
it is outsideview @(0,0,0,0,0,0,0,0,0)
it is babyiceat "And snow! Remember, we walk snow, we eat snow, we dream snow, and look all cute doing so ;P" #120 @(0,0,0,0,0,0,1,1,1)
it is babyiceat @(0,0,0,0,0,0,0,0,0)
it is snowslipdrive "Did we mentioned we drive in snow too? yeah, thats part of the life" #120 @(0,0,0,0,0,0,1,1,1)



memeer = {'host': 'ocalhost', 'identity': 'me'}
univ = {'description': 'blank'}
def review_universe (memeer = {}):
    with universe.open('r') as univjs: univ = json.load(univjs)
    if 'host' not in memeer and 'identity' not in memeer: return univ
    univ['description'] = 'Basic environment for create on host '+memeer['host']+' for user '+memeer['identity']
    model_dir = portf_dir / 'model'
    actor_dir = portf_dir / 'actor'
    # Start checking for models and actions
    if 'action' not in univ: univ['action'] = []
    if 'object' not in univ: univ['object'] = []
    ## First setup the actions
    for func in ['move', 'locate']:
        if len(list(filter(lambda x : x['func'] == func, univ['action']))) == 0:
            univ['action'].append({'jjrb': ['slow', 'quick'], 'syns': [func], 'func': func})
    ## Check for camera and pronouns
    def setup_object (objname):
        for object in univ['object']:
            if len(list(filter(lambda x : x['file'] == objname, object['model']))) > 0: return 1
        newobj = {}
        if objname == 'camera':
            newobj = {'syns': ['camera', 'viewer', 'looker', 'onlooker'], 'move': ['look', 'move', 'locate'], 'acts': [],
                'jjrb': [], 'xyz': [0, -30, 0], 'hpr': [0, 0, 0], 'lbh': [1, 1, 1], 'acts': [], 'model': [{'file': 'camera', 'jjrb': []}]}
        elif objname == '__blank__':
            newobj = {'syns': ['there', 'it', 'that'], 'move': [], 'jjrb': [], 'acts': [],
                'xyz': [0, 0, 0], 'hpr': [0, 0, 0], 'lbh': [1, 1, 1], 'acts': [], 'model': [{'file': '__blank__', 'jjrb': []}]}
        else:
            newobj = {'syns': [], 'move': ['look', 'move', 'locat'], 'jjrb': [], 'acts': [],
                            'xyz': [0, 0, 0], 'hpr': [0, 0, 0], 'lbh': [1, 1, 1], 'model': [{'file': objname, 'jjrb': []}]}
            for action in actor_dir.glob('action/'+objname+'__*.egg'):
                basefile = action.stem
                actname = re.sub(objname+'__', '', basefile)
                if actname == basefile: continue
                newobj['acts'].append({actname: {'jjrb': [], 'speed': 1, 'syns': [], 'fstart': 0, 'fdone': 1,
                                        'xyz': [0, 0, 0], 'hpr': [0, 0, 0], 'lbh': [1, 1, 1]}})
                if len(list(filter(lambda x : 'actf' in x and x['actf'] == actname, univ['action']))) > 0: continue
                univ['action'].append({'jjrb': ['slow', 'quick'], 'syns': [], 'actf': actname, 'speed': 1,
                                        'xyz': [0, 0, 0], 'hpr': [0, 0, 0], 'lbh': [1, 1, 1], 'fstart': 0, 'fdone': 1})
        univ['object'].append(newobj)
    # Check for each model now
    setup_object ('camera')
    setup_object ('__blank__')
    for model in model_dir.glob('*.egg'): setup_object (model.stem)
    for actor in actor_dir.glob('*.egg'): setup_object (actor.stem)
    # Additional components
    if 'logic_setup' not in univ: univ['logic_setup'] = []
    if 'functions' not in univ: univ['functions'] = {}
    if 'camerafocus' not in univ['functions']: univ['functions']['camerafocus'] = {'text': ['camera looks']}
    if 'objectlay' not in univ['functions']: univ['functions']['objectlay'] = {'text': ['tree stand', 'car parked', 'it is road', 'stool lay']}
    if 'objectmov' not in univ['functions']: univ['functions']['objectmov'] = {'text': ['car move'], 'wrate': ['table thrown slowly']}
    # update the values in universe
    with universe.open('w') as univjs: json.dump(univ, univjs)
    return 1
